names(df) <- sapply(df, attr, 'name')
maxtopo=setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("index", "topology", "single", "joint",'gene_no'))
for(gene in names(df)){
gene_no=gsub('Gene ','',gene) %>% substr(.,1,nchar(.)-1)
subtable=as.data.frame(df[gene],col.names = '')
subtable=subtable[which.max(subtable$joint),] # looking for max prob in joint
subtable$gene_no=gene_no
maxtopo=rbind(maxtopo,subtable)
}
colnames(maxtopo)[1]='topo_index'
nrow(maxtopo)
table=merge(dat,maxtopo,by='gene_no',all.x=T)
head(table)
table$topo_index %>% unique # 11 different topologies in total
topo_len=aggregate(len~topo_index, table,FUN='sum')
totlen=sum(topo_len$len)
totlen # total length (in bp) of core LCBs > 100bp
most.common.trees=summary(as.factor(table$topo_index)) %>% sort(.,decreasing = T) %>% data.frame(.) # sort topologies by number of represented LCBs represented by them (decreasing order)
colnames(most.common.trees)[1]='LCB_count' # # of LCB with that topology
most.common.trees$topo_index=row.names(most.common.trees)
most.common.trees$pgen=most.common.trees$LCB_count/nLCBs #pgen= LCB relative abundance
# most.common.trees=most.common.trees[c(rownames(most.common.trees)[-1],rownames(most.common.trees)[1]),] # Place the "Others" category at the end as it lumps all the rare topologies
most.common.trees$cumsum=cumsum(most.common.trees$pgen) # LCB cumulative abundance
most.common.trees$n_gen=as.numeric(seq(1,nrow(most.common.trees))) # continuous axis
most.common.trees=merge(topo_len,most.common.trees,by='topo_index',all.y=T)
most.common.trees$plen=most.common.trees$len/totlen
most.common.trees= most.common.trees[order(most.common.trees$plen, decreasing = T),]
rowlist=c(rownames(subset(most.common.trees, topo_index != '(Other)')),
rownames(subset(most.common.trees, topo_index == '(Other)')))
most.common.trees=most.common.trees[rowlist,]
most.common.trees$plencumsum=cumsum(as.numeric(most.common.trees$plen))
most.common.trees=most.common.trees[order(most.common.trees$n_gen),]
N50=most.common.trees[most.common.trees$cumsum>0.5,][1,'n_gen']
N75=most.common.trees[most.common.trees$cumsum>0.75,][1,'n_gen']
qplot(x=n_gen,y=cumsum,data=most.common.trees)+
geom_vline(xintercept = N50, color='red',size=1)+
geom_vline(xintercept = N75, color='green',size=1)+
theme_bw() # 4 topologies are necessary to represent all of the LCBs, 2 topologies are necessary to represent 50% of the LCBs
most.common.trees= most.common.trees[order(most.common.trees$plencumsum),]
most.common.trees$n_len=seq(1,nrow(most.common.trees),)
most.common.trees=most.common.trees[order(most.common.trees$n_len),]
L50=most.common.trees[most.common.trees$plencumsum>0.5,][1,'n_len']
L75=most.common.trees[most.common.trees$plencumsum>0.75,][1,'n_len']
most.common.trees$clade='Clade I'
df_clade1=most.common.trees
qplot(x=n_len,y=plencumsum,data=most.common.trees)+
geom_vline(xintercept = L50, color='red',size=1)+
geom_vline(xintercept = L75, color='green',size=1)+
theme_bw() # 4 topologies are necessary to represent 75% of the core genome length, 2 topologies are necessary to represent 50% of the core genome length
most.common.trees %>% head(LCB_count,n = 20)
qplot(x=plen,y=pgen,data=most.common.trees)+scale_y_log10()+scale_x_log10()
###
ggplot(subset(table, topo_index <5))+
geom_histogram(aes(x=topo_index+1))
# table[,c('topology','topo_index')] %>% unique()
df=rbind(df_clade2,df_clade1)
df_clade2
df_clade1
df=rbind(df_clade2[,colnames(df_clade1)],df_clade1)
df
prefix='a0.001'
nLCBs=793
pairs=read.table(paste0(path_to_files,prefix,'.pairs'),row.names=1)
head(pairs)
genes=read.table(paste0(path_to_files,prefix,'.input'),skip =2,nrows=nLCBs,sep="")
genes$V2<-strsplit(as.character(genes$V2),split="/") %>% sapply(., "[[", 2)
genes$V3<-gsub('.in','',genes$V2)
genes$V4<-substr(genes$V3,1,9)
colnames(genes)<-c('gene_no','file','nex','gene_id')
range_string = strsplit(genes$nex,split="_") %>% sapply(., "[[", 4)
genes$len<- as.numeric(strsplit(range_string,split="to") %>% sapply(., "[[", 2)) - as.numeric(strsplit(range_string,split="to") %>% sapply(., "[[", 1))
head(genes)
nrow(genes)
dat=genes
head(dat)
nrow(dat)
summary(dat)
ggplot(dat)+
geom_histogram(aes(x=len,y=..count..))+scale_x_log10()
x=readLines(paste0(path_to_files,prefix,'.gene'))
closeAllConnections()
start <- grep("^Gene", x)
mark <- vector('integer', length(x))
mark[start] <- 1
# determine limits of each table
mark <- cumsum(mark)
# mark<-mark[1:302]
# split the data for reading
df <- lapply(split(x, mark), function(.data){
.input <- read.table(textConnection(.data), skip=2, header=TRUE)
attr(.input, 'name') <- .data[1]  # save the name
.input})
# rename the list
names(df) <- sapply(df, attr, 'name')
maxtopo=setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("index", "topology", "single", "joint",'gene_no'))
for(gene in names(df)){
gene_no=gsub('Gene ','',gene) %>% substr(.,1,nchar(.)-1)
subtable=as.data.frame(df[gene],col.names = '')
subtable=subtable[which.max(subtable$joint),] # looking for max prob in joint
subtable$gene_no=gene_no
maxtopo=rbind(maxtopo,subtable)
}
colnames(maxtopo)[1]='topo_index'
nrow(maxtopo)
table=merge(dat,maxtopo,by='gene_no',all.x=T)
head(table)
topo_len=aggregate(len~topo_index, table,FUN='sum')
totlen=sum(topo_len$len)
totlen # total length (in bp) of core LCBs > 100bp
aggregate(len~topo_index, table,FUN='sum',subset = gene_id %in% subset(table,topo_index<11)$gene_id %>% unique(.) )$len %>% sum # len in bp of genes represented by fist 10 topologies
subset(table,topo_index<11)$gene_id %>% unique(.) # 217/793 LCBs (385426/762629 bp) are represented by the first 10 topologies.
# table$topo_index %>% unique
aggregate(len~topo_index, table,FUN='sum',subset = gene_id %in% subset(table,topo_index<1)$gene_id %>% unique(.) )$len %>% sum # len in bp of genes represented by fist 10 topologies
table
library(ape)
rename_labels <- function(tree, vec) {
tree$tip.label <- vec
return(tree)
}
topo_leaves=c('Bathy','R.fausta','R.magnifica','R.pacifica', 'R.phaseoliformis','R.pliocardia','R.rectimargo','R.southwardae','SUP05','V.diagonalis','V.extenta','V.gigas1','V.gigas2','V.marissinica','V.okutanii','V.soyoae1','V.soyoae2')
names(topo_leaves)=as.character(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17))
tree.pop<-ape::read.tree(text = '(((((1,9),((((2,7),4),5),(3,(6,8)))),(((10,11),14),(12,13))),15),16,17);')
tree.pop$tip.label<-topo_leaves[tree.pop$tip.label]
plot(root(tree.pop, c('SUP05','Bathy')))
tree.0 <- ape::read.tree(text = subset(table,topo_index==0)$topology %>% unique())
tree.0$tip.label<-topo_leaves[tree.0$tip.label]
plot(root(tree.0, c('SUP05','Bathy')))
tree.7 <- ape::read.tree(text = subset(table,topo_index==7)$topology %>% unique())
tree.7$tip.label<-topo_leaves[tree.7$tip.label]
plot(root(tree.7, c('SUP05','Bathy')))
as.factor(table$topo_index) %>% unique %>% length
most.common.trees=summary(as.factor(table$topo_index)) %>% sort(.,decreasing = T) %>% data.frame(.) # sort topologies by number of represented LCBs represented by them (decreasing order)
colnames(most.common.trees)[1]='LCB_count' # # of LCB with that topology
most.common.trees$topo_index=row.names(most.common.trees)
most.common.trees$pgen=most.common.trees$LCB_count/nLCBs #pgen= LCB relative abundance
most.common.trees=most.common.trees[c(rownames(most.common.trees)[-1],rownames(most.common.trees)[1]),] # Place the "Others" category at the end as it lumps all the rare topologies
most.common.trees$cumsum=cumsum(most.common.trees$pgen) # LCB cumulative abundance
most.common.trees$n_gen=as.numeric(seq(1,nrow(most.common.trees))) # continuous axis
most.common.trees=merge(topo_len,most.common.trees,by='topo_index',all.y=T)
most.common.trees[1,'len']=totlen-sum(most.common.trees[-1,'len'])
most.common.trees=most.common.trees[c(rownames(most.common.trees)[-1],rownames(most.common.trees)[1]),] # sort dataframe again
most.common.trees$plen=most.common.trees$len/totlen
most.common.trees= most.common.trees[order(most.common.trees$plen, decreasing = T),]
rowlist=c(rownames(subset(most.common.trees, topo_index != '(Other)')),
rownames(subset(most.common.trees, topo_index == '(Other)')))
most.common.trees=most.common.trees[rowlist,]
most.common.trees$plencumsum=cumsum(as.numeric(most.common.trees$plen))
most.common.trees=most.common.trees[order(most.common.trees$n_gen),]
N50=most.common.trees[most.common.trees$cumsum>0.5,][1,'n_gen']
N75=most.common.trees[most.common.trees$cumsum>0.75,][1,'n_gen']
qplot(x=n_gen,y=cumsum,data=most.common.trees)+
geom_vline(xintercept = N50, color='red',size=1)+
geom_vline(xintercept = N75, color='green',size=1)+
theme_bw() # 45 topologies are necessary to represent 75% of the LCBs, 18 topologies are necessary to represent 50% of the LCBs
most.common.trees= most.common.trees[order(most.common.trees$plencumsum),]
most.common.trees$n_len=seq(1,nrow(most.common.trees),)
most.common.trees=most.common.trees[order(most.common.trees$n_len),]
L50=most.common.trees[most.common.trees$plencumsum>0.5,][1,'n_len']
L75=most.common.trees[most.common.trees$plencumsum>0.75,][1,'n_len']
qplot(x=n_len,y=plencumsum,data=most.common.trees) # 27 topologies are necessary to represent 75% of the core genome length, 11 topologies are necessary to represent 50% of the core genome length
most.common.trees %>% head(LCB_count,n = 20)
qplot(x=plen,y=pgen,data=most.common.trees)+scale_y_log10()+scale_x_log10()
###
ggplot(subset(table, topo_index <5))+
geom_histogram(aes(x=topo_index+1))
# table[,c('topology','topo_index')] %>% unique()
most.common.trees$clade='All species'
df_all=most.common.trees
df=rbind(df_clade2[,colnames(df_clade1)],df_clade1,df_all[,colnames(df_clade1)])
df
qplot(x=n_len,y=cumsum,data=df,color=clade)+
xlab("Topologies")+
ylab("Cummulative fraction of syntenic blocs")+
theme_bw()
qplot(x=n_gen,y=cumsum,data=df,color=clade)+
xlab("Topologies")+
ylab("Cummulative fraction of syntenic blocs")+
theme_bw()
qplot(x=n_gen,y=cumsum,data=subset(df,clade != 'All species'),color=clade)+
xlab("Topologies")+
ylab("Cummulative fraction of syntenic blocs")+
theme_bw()
qplot(y=n_gen,x=cumsum,data=subset(df,clade != 'All species'),color=clade)+
xlab("Topologies")+
ylab("Cummulative fraction of syntenic blocs")+
theme_bw()
qplot(y=n_gen,x=cumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
theme_bw()
qplot(y=n_gen,x=cumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
theme_bw(legend.title=element_blank())
qplot(y=n_gen,x=cumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
theme_bw+
theme(legend.title=element_blank())
qplot(y=n_gen,x=cumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
theme_bw()+
theme(legend.title=element_blank())
qplot(y=n_gen,x=cumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
scale_color_manual(values=c('#606E96','#68C47F'))
qplot(y=n_gen,x=cumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
scale_color_manual(values=c('#606E96','#68C47F'))+
theme_bw()+
theme(legend.title=element_blank())
df
qplot(y=n_gen,x=plencumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
scale_color_manual(values=c('#606E96','#68C47F'))+
theme_bw()+
theme(legend.title=element_blank())
df=df[order(df$n_len),]
qplot(y=n_gen,x=plencumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
scale_color_manual(values=c('#606E96','#68C47F'))+
theme_bw()+
theme(legend.title=element_blank())
df
qplot(y=n_len,x=plencumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of syntenic blocs")+
scale_color_manual(values=c('#606E96','#68C47F'))+
theme_bw()+
theme(legend.title=element_blank())
qplot(y=n_len,x=plencumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of core genome")+
scale_color_manual(values=c('#606E96','#68C47F'))+
theme_bw()+
theme(legend.title=element_blank())
df
totlen
sum(df_clade2$len)
sum(df_clade1$len)
sum(df_all$len)
qplot(y=n_len,x=plencumsum,data=subset(df,clade != 'All species'),color=clade)+
ylab("Topologies")+
xlab("Cummulative fraction of core genome (762 629 bp)")+
scale_color_manual(values=c('#606E96','#68C47F'))+
theme_bw()+
theme(legend.title=element_blank())
knitr::opts_chunk$set(echo = TRUE)
# setwd("~/Desktop/codon_usage/")
setwd("./")
setwd("~/Desktop/VesicSymb_Evolution/dowstream_analyses_and_data/")
library('ggplot2')
library('gridExtra')
library(RColorBrewer)
library(dplyr)
library(tidyr)
library(grid)
require(gtable)
library('scales')
library(rsvg)
library(magick)
require('cowplot')
theme_set(theme_cowplot())
library(data.table)
recombining_genes=read.table('core_genes_with_recomb_AICc.txt')$V1
pseudogenes = read.table('./pseudogenes.txt')$V1
length(pseudogenes)
relax=read.table('./relax_results.txt',header=T,sep='\t')
relax=as.data.table(relax)
core_nopseudo=relax$gene
nrow(relax)
head(relax)
relax=subset(relax,!(gene %in% recombining_genes)) # remove genes with evidence of recombination
nrow(relax)
head(relax)
relax2<-data.table::melt(relax,id.vars=c('gene','ncodons'),
measure.vars = patterns("_k", "_pval"),
variable.name = 'comp',
value.name=c('k','pval'),
variable.factor = T)
levels(relax2$comp)<-c('SymvsFL','RuvsFL','GivsFL','GivsRu')
df_all=read.csv('codonbias_results.csv',sep='\t',row.names = 1,header=T,na.strings = '')
df_all$ispseudo<-as.numeric(df$locus_tag %in% pseudogenes)
df_all$Group<-ifelse(df_all$Genome %in% c('Bathy','SUP05'),'FL',
ifelse(df_all$Genome %in% c('V.okutanii','V.soyoae1','V.soyoae2','V.diagonalis','V.extenta','V.gigas1','V.gigas2','V.marissinica'),'Gigas','Ruthia'))
colnames(df_all)
df=df_all[,-c(14:ncol(df_all)-3)]
head(df)
subset(df, !(coregene_id %in% recombining_genes ))$coregene_id %>% unique %>% length
df_nopseudo=subset(df,ispseudo==0)
# write.table(df_nopseudo,'codonbias_results_nopseudo.txt',quote=F,row.names=F,sep='\t')
head(relax)
write.table(relax,'relax_results_norecomb.txt',header=T,row.names = F,sep='\t')
relax2$comp<-factor(relax2$comp, levels=rev(c("SymvsFL", "RuvsFL","GivsFL","GivsRu")))
Kdistrib<-ggplot(subset(relax2,comp %in% c('SymvsFL','GivsFL','RuvsFL','GivsRu') & pval<0.05))+
theme_bw()+
# geom_boxplot(aes(x=comp,y=k))+
geom_violin(aes(x=comp,y=k),fill='grey90')+
geom_jitter(aes(x=comp,y=k+0.001),width = 0.05,size=0.05)+
scale_x_discrete(position='top',labels=c('SymvsFL'="Symbionts vs\nfree-living","RuvsFL"='Clade II vs\nfree-living',"GivsFL"='Clade I vs\nfree-living',"GivsRu"='Clade I vs\nClade II'))+
geom_hline(yintercept = 1,color='red')+
scale_y_log10(limits=c(0.001,50),breaks=c(0.1,seq(0,0.6,0.2),1,seq(5,10,5),seq(25,50,25)))+
ylab('Selection coefficient (k)')+
coord_flip()+
theme(axis.title.y = element_blank(),
axis.title.x = element_text(size=8),
plot.margin=unit(c(0.90,0,0,0.25), "cm"))
Kdistrib
subset(relax2,comp %in% c('SymvsFL','GivsFL','RuvsFL','GivsRu') & pval<0.05)
dcast(df)
dcast(df, k~gene+comp)
dcast(as.data.frame(df), k~gene+comp)
as.data.frame(df)
df=subset(relax2,comp %in% c('SymvsFL','GivsFL','RuvsFL','GivsRu') & pval<0.05)
dcast(as.data.frame(df), k~gene+comp)
dcast(as.data.frame(df), k~comp)
dcast(as.data.frame(df), gene~comp)
dcast(as.data.frame(df), gene~comp,value.var=k)
?dcast
dcast(df, gene~comp,value.var='k')
df=as.data.frame(dcast(df, gene~comp,value.var='k'))
df
ggqqplot(df$GivsRu)
library(ggpubr)
ggqqplot(df$GivsRu)
ggqqplot(log10(df$GivsRu))
ggqqplot(log(df$GivsRu))
shapiro.test(log(df$GivsRu))
wilcox.test(df$GivsFL,df$RuvsFL)
df
wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'lessl)
wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less')
wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less')
wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'greater')
wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less')
wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less',paired=T)
subset(relax2,comp %in% c('SymvsFL','GivsFL','RuvsFL','GivsRu') & pval<0.05)
# df=as.data.frame(dcast(df, gene~comp,value.var='k'))
# wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less')
# wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less',paired=T)
df
df=subset(relax2,comp %in% c('SymvsFL','GivsFL','RuvsFL','GivsRu') & pval<0.05)
# df=as.data.frame(dcast(df, gene~comp,value.var='k'))
# wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less')
# wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less',paired=T)
df
df=subset(relax2,comp %in% c('GivsFL','RuvsFL') & pval<0.05)
# df=as.data.frame(dcast(df, gene~comp,value.var='k'))
# wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less')
# wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less',paired=T)
df
wilcox.test(df$k~df$comp,alternative = 'less')
df$comp
?wilcox.test
df=subset(relax2,comp %in% c('GivsFL','RuvsFL') & pval<0.05)
df=as.data.frame(dcast(df, gene~comp,value.var='k'))
wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less')
wilcox.test(df$GivsFL,df$RuvsFL,alternative = 'less',paired=T)
colors=list(Gi='#606E96',Ru='#68C47F',FL='#F6EFA1')
colors_fill=c(Bathy = "#ffa800", SUP05 = "#ff006d", R.magnifica = "#287C8EFF",
R.phaseoliformis = "#21908CFF", R.pacifica = "#20A486FF", R.rectimargo = "#35B779FF",
R.pliocardia = "#5DC863FF", R.southwardae = "#8FD744FF", V.okutanii = "#440154FF",
V.soyoae1 = "#331f70",V.soyoae2 = "#481F70FF", V.diagonalis = "#443A83FF", V.extenta = "#3B528BFF",
V.gigas2 = "#31688EFF",V.gigas1 = "#308d8d",V.marissinica = "#33701f", R.fausta = "#68C47F")
df$Group<-factor(df$Group,levels = c('FL','Ruthia','Gigas'))
group_names <- c(`FL` = "Free-living",
`Gigas` = "Clade I",
`Ruthia` = "Clade II")
sup05cdc=subset(df,Genome=='SUP05' & P.CDC.<0.05 & ispseudo==0)$CDC
maxdensitysup05=density(sup05cdc)$x[which.max(density(sup05cdc)$y)]
CDC_spectra<-ggplot(data=subset(df,P.CDC.<0.05 & ispseudo==0) )+
theme_bw()+
geom_density(aes(x=CDC,color=Group,fill=Genome,y=..density..),color='black',alpha=0.3)+
geom_vline(aes(xintercept = maxdensitysup05),linetype=2,color='grey60')+
scale_x_continuous(limits=c(0,0.35),minor_breaks = seq(0.05, 0.25, by=0.01),breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3))+
facet_grid(Group~.,labeller = as_labeller(group_names),switch = 'y')+
scale_color_manual(values=c(colors$FL,colors$Ru,colors$Gi))+
scale_fill_manual(values=colors_fill)+
labs(x='Codon Deviation Coefficient (CDC)',y='Density')+
theme(strip.background = element_rect(fill = 'white'),
axis.title.x = element_text(),
panel.grid.minor.y = element_blank(),
strip.text.y = element_text(angle=-90)
)
CDC_spectra
knitr::opts_chunk$set(echo = TRUE)
# setwd("~/Desktop/codon_usage/")
setwd("./")
setwd("~/Desktop/VesicSymb_Evolution/dowstream_analyses_and_data/")
library('ggplot2')
library('gridExtra')
library(RColorBrewer)
library(dplyr)
library(tidyr)
library(grid)
require(gtable)
library('scales')
library(rsvg)
library(magick)
require('cowplot')
theme_set(theme_cowplot())
library(data.table)
recombining_genes=read.table('core_genes_with_recomb_AICc.txt')$V1
pseudogenes = read.table('./pseudogenes.txt')$V1
length(pseudogenes)
relax=read.table('./relax_results.txt',header=T,sep='\t')
relax=as.data.table(relax)
core_nopseudo=relax$gene
nrow(relax)
head(relax)
relax=subset(relax,!(gene %in% recombining_genes)) # remove genes with evidence of recombination
nrow(relax)
head(relax)
relax2<-data.table::melt(relax,id.vars=c('gene','ncodons'),
measure.vars = patterns("_k", "_pval"),
variable.name = 'comp',
value.name=c('k','pval'),
variable.factor = T)
levels(relax2$comp)<-c('SymvsFL','RuvsFL','GivsFL','GivsRu')
df_all=read.csv('codonbias_results.csv',sep='\t',row.names = 1,header=T,na.strings = '')
df_all$ispseudo<-as.numeric(df$locus_tag %in% pseudogenes)
df_all$Group<-ifelse(df_all$Genome %in% c('Bathy','SUP05'),'FL',
ifelse(df_all$Genome %in% c('V.okutanii','V.soyoae1','V.soyoae2','V.diagonalis','V.extenta','V.gigas1','V.gigas2','V.marissinica'),'Gigas','Ruthia'))
colnames(df_all)
df=df_all[,-c(14:ncol(df_all)-3)]
head(df)
subset(df, !(coregene_id %in% recombining_genes ))$coregene_id %>% unique %>% length
df_nopseudo=subset(df,ispseudo==0)
# write.table(df_nopseudo,'codonbias_results_nopseudo.txt',quote=F,row.names=F,sep='\t')
colors=list(Gi='#606E96',Ru='#68C47F',FL='#F6EFA1')
colors_fill=c(Bathy = "#ffa800", SUP05 = "#ff006d", R.magnifica = "#287C8EFF",
R.phaseoliformis = "#21908CFF", R.pacifica = "#20A486FF", R.rectimargo = "#35B779FF",
R.pliocardia = "#5DC863FF", R.southwardae = "#8FD744FF", V.okutanii = "#440154FF",
V.soyoae1 = "#331f70",V.soyoae2 = "#481F70FF", V.diagonalis = "#443A83FF", V.extenta = "#3B528BFF",
V.gigas2 = "#31688EFF",V.gigas1 = "#308d8d",V.marissinica = "#33701f", R.fausta = "#68C47F")
df$Group<-factor(df$Group,levels = c('FL','Ruthia','Gigas'))
group_names <- c(`FL` = "Free-living",
`Gigas` = "Clade I",
`Ruthia` = "Clade II")
sup05cdc=subset(df,Genome=='SUP05' & P.CDC.<0.05 & ispseudo==0)$CDC
maxdensitysup05=density(sup05cdc)$x[which.max(density(sup05cdc)$y)]
CDC_spectra<-ggplot(data=subset(df,P.CDC.<0.05 & ispseudo==0) )+
theme_bw()+
geom_density(aes(x=CDC,color=Group,fill=Genome,y=..density..),color='black',alpha=0.3)+
geom_vline(aes(xintercept = maxdensitysup05),linetype=2,color='grey60')+
scale_x_continuous(limits=c(0,0.35),minor_breaks = seq(0.05, 0.25, by=0.01),breaks=c(0,0.05,0.1,0.15,0.2,0.25,0.3))+
facet_grid(Group~.,labeller = as_labeller(group_names),switch = 'y')+
scale_color_manual(values=c(colors$FL,colors$Ru,colors$Gi))+
scale_fill_manual(values=colors_fill)+
labs(x='Codon Deviation Coefficient (CDC)',y='Density')+
theme(strip.background = element_rect(fill = 'white'),
axis.title.x = element_text(),
panel.grid.minor.y = element_blank(),
strip.text.y = element_text(angle=-90)
)
CDC_spectra
colors=list(Gi='#606E96',Ru='#68C47F',FL='#F6EFA1')
bipl<-data.table::dcast(as.data.table(subset(df, coregene_id %in% core_nopseudo)), coregene_id ~ Group, value.var = 'CDC', fun=mean,subset=.(P.CDC. < 0.05 & coregene_id %in% core_nopseudo))
Bi_plot<-ggplot(bipl)+
theme_bw()+
geom_point(aes(x=FL,y=Gigas,color='2'),alpha=0.6,size=0.5)+
geom_point(aes(x=FL,y=Ruthia,color='1',alpha=1-abs(1-(Ruthia/FL))),size=0.5)+
geom_abline(slope=1,intercept = 0)+
geom_smooth(aes(x=FL,y=Ruthia,color='1'),fill='grey90',method='lm',se=T,size=0.5)+
geom_smooth(aes(x=FL,y=Gigas,color='2'),fill='grey90',method='lm',se=T,size=0.5)+
scale_alpha_continuous(range = c(0.4, 0.6))+
scale_y_continuous(limits=c(0.05,0.4))+
scale_x_continuous(limits=c(0.05,0.36))+ expand_limits(x = 0)+
xlab(label = 'CDC in Free-Living')+ylab(label= 'CDC in symbionts')+
scale_color_manual(values=c(colors$Ru,colors$Gi),labels=c('Clade II','Clade I'),name='')+
theme(
legend.text=element_text(size=8))
Bi_plot
#### Arrange plots ###
p3<-grid.arrange(CDC_spectra + theme(legend.position="none"), Bi_plot+ theme(legend.position="none"), nrow=1, widths = unit(c(10,9), "cm"), heights = unit(rep(10, 1), "cm"))
p4<-grid.arrange(p3,Kdistrib,nrow=2,heights = unit(c(10,7), "cm"), widths = unit(c(15), "cm"))
bipl %>% head
wilcox.test(bipl$FL,bipl$Ruthia,alternative = 'less',paired=T) # respective of each gene
wilcox.test(bipl$Ruthia,bipl$FL,alternative = 'less',paired=T) # respective of each gene
?wilcox.test
kruskal.test(bipl)
# Are the cdc values smaller in RutGigashia than FL?
wilcox.test(bipl$Gigas,bipl$FL,alternative = 'less',paired=T) # respective of each gene
# Are the cdc values smaller in Gigas than Ruthia?
wilcox.test(bipl$Gigas,bipl$Ruthia,alternative = 'less',paired=T) # respective of each gene
# Are the cdc values smaller in Ruthia than FL?
wilcox.test(bipl$Ruthia,bipl$FL,alternative = 'less',paired=T) # respective of each gene
CDC_spectra
##### cdc spectra per genome ########
subset(df,P.CDC.<0.05 & ispseudo==0)
##### cdc spectra per genome ########
cdc_spectra=subset(df,P.CDC.<0.05 & ispseudo==0)
wilcox.test(cdc_spectra$CDC~cdc_spectra$Group)
kruskal.test(cdc_spectra$CDC~cdc_spectra$Group)
cdc_flvsru=subset(df,P.CDC.<0.05 & ispseudo==0 $ Group != 'Gigas')
subset(df,P.CDC.<0.05 & ispseudo==0 $ Group != 'Gigas')
cdc_flvsru=subset(df,P.CDC.<0.05 & ispseudo==0 & Group != 'Gigas')
wilcox.test(cdc_flvsru$CDC~cdc_flvsru$Group) # differences amongst the treegroups
levels(cdc_flvsru$Group)
wilcox.test(cdc_flvsru$CDC~cdc_flvsru$Group, alternative='less') # differences amongst the treegroups
wilcox.test(cdc_flvsru$CDC~cdc_flvsru$Group, alternative='greater') # differences amongst the treegroups
wilcox.test(cdc_flvsgi$CDC~cdc_flvsgi$Group, alternative='greater') # differences amongst the treegroups
cdc_flvsgi=subset(df,P.CDC.<0.05 & ispseudo==0 & Group != 'Ruthia')
wilcox.test(cdc_flvsgi$CDC~cdc_flvsgi$Group, alternative='greater') # differences amongst the treegroups
levels(df$Group)
cdc_givsru=subset(df,P.CDC.<0.05 & ispseudo==0 & Group != 'FL')
wilcox.test(cdc_givsru$CDC~cdc_givsru$Group, alternative='greater') # differences amongst the treegroups
